<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.effect.ColorAdjust?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.text.Font?>

<VBox prefHeight="629.0" prefWidth="1003.0" xmlns="http://javafx.com/javafx/8.0.141" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.controllers.ContrDesignPatterns_Strategy">
  <children>
    <AnchorPane maxHeight="-1.0" maxWidth="-1.0" prefHeight="432.0" prefWidth="679.0" VBox.vgrow="ALWAYS">
      <children>
            <ImageView fitHeight="85.0" fitWidth="61.0" layoutX="217.0" layoutY="286.0" pickOnBounds="true" preserveRatio="true">
               <image>
                  <Image url="@../jpg/hardDrive.jpg" />
               </image>
            </ImageView>
        <Label alignment="CENTER" layoutX="349.0" layoutY="7.0" prefHeight="36.0" prefWidth="269.0" style="&#10;" text="Design Pattern Strategy" textAlignment="CENTER" textFill="#111111" wrapText="true">
          <font>
            <Font name="System Bold" size="18.0" />
          </font>
        </Label>
            <Label layoutX="26.0" layoutY="43.0" prefHeight="106.0" prefWidth="946.0" text="Strategy Pattern may be used in case there is a need to define super class and a series of sub-class that will have one characteristic or behaviour that is similar in a sense that it can be defined as the same type of behaviour or character but in details it differs. Instead of implementing an interface in typical way and overriding methods in each sub-class we use an instance variable that is interface subclass with appropriate method. We use Composition here, instead of typical inheriting, we compose super class including object with desired characteristic. This also allows to change the characteristic at run time." textAlignment="JUSTIFY" textFill="#111111" wrapText="true" />
            <ImageView fitHeight="85.0" fitWidth="61.0" layoutX="217.0" layoutY="385.0" pickOnBounds="true" preserveRatio="true">
               <image>
                  <Image url="@../jpg/hardDrive.jpg" />
               </image>
            </ImageView>
            <ImageView fitHeight="85.0" fitWidth="61.0" layoutX="217.0" layoutY="482.0" pickOnBounds="true" preserveRatio="true">
               <image>
                  <Image url="@../jpg/hardDrive.jpg" />
               </image>
            </ImageView>
            <Label layoutX="160.0" layoutY="290.0" text="Drive D" />
            <Label layoutX="162.0" layoutY="385.0" text="Drive E" />
            <Label layoutX="162.0" layoutY="482.0" text="Drive F" />
            <Label layoutX="291.0" layoutY="290.0" text="Capacity 1000 GB" />
            <Label layoutX="291.0" layoutY="385.0" text="Capacity 500 GB" />
            <Label layoutX="291.0" layoutY="482.0" text="Capacity 100 GB" />
            <Label layoutX="291.0" layoutY="316.0" text="Price 380" />
            <Label layoutX="291.0" layoutY="414.0" text="Price 200" />
            <Label layoutX="291.0" layoutY="511.0" text="Price 100" />
            <TextArea fx:id="output" editable="false" layoutX="459.0" layoutY="326.0" prefHeight="238.0" prefWidth="463.0" wrapText="true">
               <font>
                  <Font size="13.0" />
               </font></TextArea>
            <Button fx:id="run" layoutX="722.0" layoutY="269.0" mnemonicParsing="false" onAction="#OnActRun" prefHeight="31.0" prefWidth="164.0" text="Run" />
            <Label layoutX="26.0" layoutY="152.0" prefHeight="85.0" prefWidth="953.0" text="Created Interface, we will be used in HardDrive sub-classes with instance variable which is set as appropriate file system class implementing FileSystem interface. This allows not to affect HardDrive classes which do not typically implement interfaces but still allows them to use interface. This is also known as decoupling, that is encapsulating characteristic or behaviour that varies. Classes that implement file System allow other classes to use exact same code without its duplication." wrapText="true" />
            <Button fx:id="showUML" layoutX="473.0" layoutY="269.0" mnemonicParsing="false" onAction="#ActButShowUML" text="Show UML Diagram" />
            <Label layoutX="19.0" layoutY="248.0" prefHeight="21.0" prefWidth="553.0" text="It is advised to review this module along side with source code." />
            <Label layoutX="26.0" layoutY="406.0" text="Hard Drives">
               <font>
                  <Font name="System Bold" size="15.0" />
               </font>
            </Label>
      </children>
         <effect>
            <ColorAdjust />
         </effect>
    </AnchorPane>
  </children>
</VBox>
